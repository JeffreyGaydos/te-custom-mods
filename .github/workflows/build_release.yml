name: release-te-custom-mods
run-name: Build ${{ github.ref_name }}
on:
  pull_request:
    branches-ignore:
      #the release branch will is a permanent branch and has the build. A separate PR
      #is created for you to approve that the build is ok
      - 'release/**'
jobs:
  build_release_pr:
    runs-on: windows-latest
    env:
      BRANCH_NAME: literallyAnything
    steps:
      - name: Declare internal variables
        run: echo "$BRANCH_NAME"
        # run: |
        #   echo "existance=git ls-remote --heads origin $BRANCH_NAME" >> $GITHUB_ENV
        #   echo ::group::Vars
        #   echo "$BRANCH_NAME"
        #   echo ::endgroup::
      - name: checkout repository
        uses: actions/checkout@v3
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      # - name: Check if release exists
      #   id: check_branch
      #   run: |
      #     if [[ git ls-remote --heads origin release-${{github.GITHUB_REF}} ]]; then
      #       echo "::set-output name=exists::true"
      #     else
      #       echo "::set-output name=exists::false"
      #     fi
      - name: Create release branch
        if: ${{github.GITHUB_STATE.existance}}
        run: git checkout -b release-${{github.GITHUB_REF}} ${{github.GITHUB_SHA}}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Publish release branch
        if: steps.check_branch.outputs.exists == 'false'
        run: git push --set-upstream origin release-${{github.GITHUB_REF}} ${{github.GITHUB_SHA}}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      # - name: Create pull request
      #   if: steps.check_branch.outputs.exists == 'false'
      #   run: gh pr create -B master -H test-branch-that-exists --title "Created by GH Actions!" --body "The first step in my attempt to automatically build and release plugin updates, which can then be downloaded and installed in Wordpress."
      #   env:
      #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      # - name: Push to release branch
      #   if: steps.check_branch.outputs.exists == 'true'
      #   run: git merge ${{branchName}}
      #   env:
      #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}