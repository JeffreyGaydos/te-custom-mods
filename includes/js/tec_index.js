var tec_innerIndexWrapperHeight_open;
var tec_innerIndexWrapperHeight_closed;
var tec_index_visible = false;
var tec_index_animation_handler;

//checking if an index should be generated by this page
if(!(document.getElementById("no_index"))) {
    generateIndex();
    //tec_closeIndex();
}

function tec_closeIndex() {
    clearTimeout(tec_index_animation_handler);
    tec_safe_remove_class(document.getElementById("tec_indexBox"), "open");
    tec_safe_remove_class(document.getElementById("tec_indexList"), "visible");
    document.getElementById("tec_innerIndexWrapper").style.height = `${tec_innerIndexWrapperHeight_closed}px`;
}

function tec_openIndex() {
    document.getElementById("tec_indexBox").classList.add("open");
    tec_index_animation_handler = setTimeout(() => {
        document.getElementById("tec_indexList").classList.add("visible");
    }, 250);
    document.getElementById("tec_innerIndexWrapper").style.height = `${tec_innerIndexWrapperHeight_open}px`;
}

/*
 *  Called when the dropdown image is clicked.
 *  Generates the index links and rotates the dropdown arrow.
 */
function toggleIndex() {
    tec_index_visible = !tec_index_visible;
    if(tec_index_visible) {
        tec_openIndex();
    } else {
        tec_closeIndex();
    }
    
    //allows the index to stay mobile friendly when clicked
    //mobileCompatible();
}

//Adds should not be inside the index feature. Remove any that slip in
function removeAds(item, index) {
	try {
		if(item.childElementCount > 2) {
			item.removeChildNodes(item.childNodes[1]);
		}
	} catch(e) {
		//no adds found
	}
}

function shouldIgnoreH2(h2element) {
    return isH2ImgOnly(h2element) || isTitle(h2element);
}

function shouldIgnoreH3(h3element) {
    return isH3ImgOnly(h3element) || isPromoH3(h3element);
}

function isH2ImgOnly(h2element) {
    var allImgH2s = document.querySelectorAll("h2 img");
    var res = false;
    allImgH2s.forEach((el) => {
        if(h2element == el.parentElement && h2element.innerText == "") {
            res = true;
        }
    });
    return res;
}

function isH3ImgOnly(h3element) {
    var allImgH2s = document.querySelectorAll("h2 img");
    var res = false;
    allImgH2s.forEach((el) => {
        if(h3element == el.parentElement && h3element.innerText == "") {
            res = true;
        }
    });
    return res;
}

function isTitle(h2element) {
    return document.querySelector(".entry-content h2") == h2element && h2element.querySelectorAll("img").length > 0 && h2element.innerText.length > 0;
}

function isPromoH3(h3element) {
    //title of book is not picked up by generator, so remove author, leave buy on amazon link
    return h3element && h3element.innerText.indexOf('By Craig Moore') != -1;
    //we want to promote our shirts as much as possible
    return h3element && (h3element.innerHTML.indexOf('Tank-It') != -1 || h3element.innerHTML.indexOf('Support Shirt') != -1);
}

//inserts the table of contents dynamically into all articles
function generateIndex() {
    //these collections contain the position information for each HTML tag object
    var h2c = [];
    var h3c = [];
    if(document.getElementsByClassName("entry-content")[0]) {
        h2c = document.getElementsByClassName("entry-content")[0].getElementsByTagName("h2");
        h3c = document.getElementsByClassName("entry-content")[0].getElementsByTagName("h3");
    }

    if(h2c.length + h3c.length == 0) return; //nothing to display...
	
	for(var k = 0; k < h2c.length; k++) {
		removeAds(h2c[k], k);
	}
	
	for(var l = 0; l < h3c.length; l++) {
		removeAds(h3c[l], l);
	}
    
    var h2TagsList = new Array();
    
    for(var i = 0; i < h2c.length; i++) {
        if(!shouldIgnoreH2(h2c[i])) {
            h2TagsList.push(new tagSpot(h2c[i], h2c[i].getBoundingClientRect().top, 2));
        }
    }

    var h3TagsList = new Array();
    for(var j = 0; j < h3c.length; j++) {
        if(!shouldIgnoreH3(h3c[i])) {
            h3TagsList.push(new tagSpot(h3c[j], h3c[j].getBoundingClientRect().top, 3));
        }
    }

    var fullIndex = h3TagsList.concat(h2TagsList);
    //sorts tha array of objects according to their position on the page in y
    fullIndex.sort(function(a, b){return a.y - b.y});
    //render the box for the index
    var tec_indexBox = document.createElement("H2");
    tec_indexBox.id = "tec_indexBox";
    tec_indexBox.classList.add("open");
    var indexWrapper = document.createElement("DIV");
    indexWrapper.classList.add("entry-content");
    indexWrapper.id = "tec_indexWrapper";
    var innerIndexWrapper = document.createElement("DIV");
    innerIndexWrapper.id = "tec_innerIndexWrapper";
    var indexToggler = document.createElement("A");
    indexToggler.id = "tec_indexToggler";
    indexToggler.addEventListener("click", toggleIndex);
    var indexContent = document.createElement("H2");
    indexContent.id = "tec_indexContent";
    indexContent.innerText = "Contents:";
    var indexDropdown = document.createElement("SPAN");
    indexDropdown.id = "tec_indexDropdown";
    var indexDropdownImage = document.createElement("IMG");
    indexDropdownImage.id = "tec_indexIcon";
    indexDropdownImage.src = "/wp-content/plugins/te-custom-mods/images/DropdownBlack.png";
    indexDropdown.appendChild(indexDropdownImage);
    indexContent.appendChild(indexDropdown);
    indexToggler.appendChild(indexContent);
    innerIndexWrapper.appendChild(indexToggler);
    var indexList = document.createElement("OL");
    indexList.id = "tec_indexList";

    //The Linker: link up each index element to an ID on the page (also add that ID to the elements in the page)
    for(var k = 0; k < fullIndex.length; k++) {
        if(fullIndex[k].h == 2) {
            if(!shouldIgnoreH2(fullIndex[k].t)) {
                indexList.appendChild(indexH2(fullIndex[k].t.innerText, "index" + k));
                //finding the in-page element so we can change its id to link to the index
                var l = 0;
                while(l < h2c.length && fullIndex[k].t.innerText != h2c[l].innerText) {
                    l++;
                }
                if(l < h2c.length) {
                    h2c[l].id = "index" + k;
                }
            }
        } else {
            if(!shouldIgnoreH3(fullIndex[k].t)) {
                //check is so that first element looks good
                indexList.appendChild(k == 0 ? indexH2(fullIndex[k].t.innerText, "index" + k) : indexH3(fullIndex[k].t.innerText, "index" + k));
                //finding the in-page element so we can change its id to link to the index
                var l = 0;
                while(l < h3c.length && fullIndex[k].t.innerText != h3c[l].innerText) {
                    l++;
                }
                if(l < h3c.length) {
                    h3c[l].id = "index" + k;
                }
            }
        }
    }
    innerIndexWrapper.appendChild(indexList);
    indexWrapper.appendChild(innerIndexWrapper);
    tec_indexBox.appendChild(indexWrapper);
    document.getElementsByClassName("entry-content")[0].prepend(tec_indexBox);
    tec_innerIndexWrapperHeight_open = indexWrapper.clientHeight;
    console.log(tec_innerIndexWrapperHeight_open);
    indexList.classList.add("after-measuring");
    tec_closeIndex();
    tec_innerIndexWrapperHeight_closed = indexWrapper.clientHeight;
    console.log(tec_innerIndexWrapperHeight_closed);
    // mobileCompatible();
}

/*
 *  Custom object for the generate header function
 *  t - should be the full html tag found using getElement functions (may lose position information)
 *  y - should be the position of the html tag as it appears in the page
 *  h - should be either 2 or 3, representing that the tag is (currently only supports h2 and h3 tags)
 */
function tagSpot(tag, position, hVal) {
    this.t = tag;
    this.y = position;
    this.h = hVal;
}

/*
 *  Helper function for generate index. Inserts an element into the array just before the specified index.
 *  Updates array.
 *  array must be an array
 *  element must be an html element
 *  index must be a number [0, array.length]
 */
function insertAt(index, array, element) {
    if(index == array.length) {
        array[index] = element;
        return array;
    }
    var arrayCopy = Array.from(array);
    var half1 = arrayCopy.slice(0, index);
    var half2 = arrayCopy.slice(index, array.length - 1);
    return half1.concat(element, half2);
}

/*
 *  Helper function for generate index. Ensures the proper indentation for the type of header.
 */
function indexH3(h3, id) {
    var headerLink = document.createElement("A");
    headerLink.classList.add("tec_index_text");
    headerLink.href = `#${id}`;
    headerLink.innerHTML = h3; //must use HTML here since occaisionally we pick up special formatting
    var contentItem = document.createElement("LI");
    contentItem.classList.add("tec_contents_item_h3");
    contentItem.appendChild(headerLink);
    return contentItem;
}

/*
 *  Helper function for generate index. Ensures the proper indentation for the type of header.
 */
function indexH2(h2, id) {
    var headerLink = document.createElement("A");
    headerLink.classList.add("tec_index_text");
    headerLink.href = `#${id}`;
    headerLink.innerHTML = h2;
    var contentItem = document.createElement("LI");
    contentItem.classList.add("tec_contents_item_h3");
    contentItem.appendChild(headerLink);
    return contentItem;
}