var tec_index_contentsHeight;

//checking if an index should be generated by this page
if(!(document.getElementById("no_index")) && document.title.substring(0, 16) != "You searched for") {
    generateIndex();
}

/*
 *  Called when the dropdown image is clicked.
 *  Generates the index links and rotates the dropdown arrow.
 */
function toggleIndex() {
	var indexVis = toggleIndexVisible();
    var rot = (indexVis) ? 0 : -90;
    document.getElementById("indexBox").remove();
    generateIndex();
    //strict ordering^v
    document.getElementById("indexDropdown").style.transform = "rotate(" + rot + "deg)";
	document.getElementById("indexDropdown").style.animationName = indexVis ? "dropUpArrow" : "dropDownArrow";
    document.getElementById("indexDropdown").style.animationDuration = "0.25s";
    document.getElementById("indexDropdown").style.animationDirection = "reverse";
	
	if(indexVis) //avoids setting the clientHeight to 0 (when the index is not open)
		tec_index_contentsHeight = document.getElementById("indexBox").getElementsByTagName("ol")[0].clientHeight;
	document.getElementsByTagName("style")[0].innerHTML += "@keyframes contractIndexBox { 100% { height: " + tec_index_contentsHeight + "px; } 100% { opacity: 1; } }";
	document.getElementById("indexBox").getElementsByTagName("ol")[0].style.height = indexVis ? tec_index_contentsHeight + "px" : "0px";
	document.getElementById("indexBox").getElementsByTagName("ol")[0].style.opacity = indexVis ? "1" : "0";
	document.getElementById("indexBox").getElementsByTagName("ol")[0].style.animationName = indexVis ? "expandIndexBox" : "contractIndexBox";
	document.getElementById("indexBox").getElementsByTagName("ol")[0].style.animationDuration = "0.5s";
	document.getElementById("indexBox").getElementsByTagName("ol")[0].style.animationDirection = "reverse";

    //mainly for ensuring that the arrow is the correct color
    tec_index_dm()
    
    //allows the index to stay mobile friendly when clicked
    mobileCompatible();
}

var indexVisible = false;

//Adds should not be inside the index feature. Remove any that slip in
function removeAds(item, index) {
	try {
		if(item.childElementCount > 2) {
			console.log("Removed child: " + item.childNodes[1]);
			item.removeChildNodes(item.childNodes[1]);
		}
	} catch(e) {
		//no adds found
	}
}

function shouldIgnoreH2(h2element) {
    return isH2ImgOnly(h2element) || isTitle(h2element);
}

function shouldIgnoreH3(h3element) {
    return isH3ImgOnly(h3element) || isPromoH3(h3element);
}

function isH2ImgOnly(h2element) {
    var allImgH2s = document.querySelectorAll("h2 img");
    var res = false;
    allImgH2s.forEach((el) => {
        if(h2element == el.parentElement && h2element.innerText == "") {
            res = true;
        }
    });
    return res;
}

function isH3ImgOnly(h3element) {
    var allImgH2s = document.querySelectorAll("h2 img");
    var res = false;
    allImgH2s.forEach((el) => {
        if(h3element == el.parentElement && h3element.innerText == "") {
            res = true;
        }
    });
    return res;
}

function isTitle(h2element) {
    return document.querySelector(".entry-content h2") == h2element && h2element.querySelectorAll("img").length > 0 && h2element.innerText.length > 0;
}

function isPromoH3(h3element) {
    //title of book is not picked up by generator, so remove author, leave buy on amazon link
    return h3element && h3element.innerText.indexOf('By Craig Moore') != -1;
    //we want to promote our shirts as much as possible
    return h3element && (h3element.innerHTML.indexOf('Tank-It') != -1 || h3element.innerHTML.indexOf('Support Shirt') != -1);
}

//inserts the table of contents dynamically into all articles
function generateIndex() {
    //these collections contain the position information for each HTML tag object
    var h2c = document.getElementsByClassName("entry-content")[0].getElementsByTagName("h2");
    var h3c = document.getElementsByClassName("entry-content")[0].getElementsByTagName("h3");

    if(h2c.length + h3c.length == 0) return; //nothing to display...
	
	for(var k = 0; k < h2c.length; k++) {
		removeAds(h2c[k], k);
	}
	
	for(var l = 0; l < h3c.length; l++) {
		removeAds(h3c[l], l);
	}
    
    var h2TagsList = new Array();
    
    for(var i = 0; i < h2c.length; i++) {
        if(!shouldIgnoreH2(h2c[i])) {
            h2TagsList.push(new tagSpot(h2c[i], h2c[i].getBoundingClientRect().top, 2));
        }
    }

    var h3TagsList = new Array();
    for(var j = 0; j < h3c.length; j++) {
        if(!shouldIgnoreH3(h3c[i])) {
            h3TagsList.push(new tagSpot(h3c[j], h3c[j].getBoundingClientRect().top, 3));
        }
    }

    var fullIndex = h3TagsList.concat(h2TagsList);
    //sorts tha array of objects according to their "p" orioerty (position on the page in y)
    fullIndex.sort(function(a, b){return a.y - b.y});
    
    //render the box for the index
    var articleContent = document.getElementsByClassName("entry-content")[0].innerHTML;
    var indexBox =  '<h2 id="indexBox">'
        + '<div style="width: 100%; border: 0px solid #424732; text-align: left;" class="entry-content">'
            + '<div style="width: 50%; border: 2px solid #424732; padding: 3px 3px 3px 3px; text-align: left; margin-left: 0px; min-width: calc(25% + 300px); font-size: 15pt;" class="entry-content" id="innerIndexBox">'
                + '<a onclick="toggleIndex()" style="cursor: pointer; text-decoration: none;">'
                    + '<h2 style="margin-left: 5px; margin-bottom: 0px; margin-top: 0px; width: 98%;" id="indexContent">'
                        + 'Contents:'
                        + '<span style="float: right; transform: rotate(-90deg);" id="indexDropdown">'
                            + '<img src="https://tanks-encyclopedia.com/wp-content/uploads/2020/06/DropdownBlack.png" id="indexIcon">'
                        + '</span>'
                    + '</h2>'
                + '</a>'
                + '<ol style="margin-right: 0px; margin-left: 5%;">';
    document.getElementsByClassName("entry-content")[0].innerHTML = articleContent;    
    if(indexVisible) {
        //document.getElementById("indexBox").getElementById("indexDropdown").style.transform = "rotate(90deg)";
        for(var k = 0; k < fullIndex.length; k++) {
            if(fullIndex[k].hVal() == 2) {
                if(!shouldIgnoreH2(fullIndex[k].t)) {
                    indexBox += indexH2(fullIndex[k].t.innerText, "index" + k);
                    //finding the in-page element so we can change its id to link to the index
                    var l = 0;
                    while(l < h2c.length && fullIndex[k].t.innerText != h2c[l].innerText) {
                        //console.log("Linker finding tags...");
                        l++;
                    }
                    //console.log("Linker Found: " + h2c[l].innerHTML);
                    if(l < h2c.length) {
                        h2c[l].id = "index" + k;
                    }
                }
            } else {
                if(!shouldIgnoreH3(fullIndex[k].t)) {
                    //check is so that first element looks good
                    indexBox += k == 0 ? indexH2(fullIndex[k].t.innerText, "index" + k) : indexH3(fullIndex[k].t.innerText, "index" + k);
                    //finding the in-page element so we can change its id to link to the index
                    var l = 0;
                    while(l < h3c.length && fullIndex[k].t.innerText != h3c[l].innerText) {
                        //console.log("Linker finding tags...");
                        l++;
                    }
                    //console.log("Linker Found: " + h3c[l].innerHTML);
                    if(l < h3c.length) {
                        h3c[l].id = "index" + k;
                    }
                }
            }
        }
    }

    indexBox += '</ol></div></div></h2>';
    var current = document.getElementsByClassName("entry-content")[0].innerHTML;
    document.getElementsByClassName("entry-content")[0].innerHTML = indexBox + current;

    mobileCompatible();
	
	//For future animations - see tec_index.js
	document.getElementsByTagName("style")[0].innerHTML += "@keyframes dropDownArrow { 100% {transform: rotate(0deg);} }";
	document.getElementsByTagName("style")[0].innerHTML += "@keyframes dropUpArrow { 100% {transform: rotate(-90deg);} }";
	document.getElementsByTagName("style")[0].innerHTML += "@keyframes expandIndexBox { 50% { opacity: 0; } 100% { height: 0px; } 100% { opacity: 0; } }";
}

//allows external js files to easily toggle the private global module variable
function toggleIndexVisible() {
    if(indexVisible) {
        indexVisible = false;
    } else {
        indexVisible = true;
    }
    return indexVisible;
}

/*
 *  Custom object for the generate header function
 *  t - should be the full html tag found using getElement functions (may lose position information)
 *  y - should be the position of the html tag as it appears in the page
 *  h - should be either 2 or 3, representing that the tag is (currently only supports h2 and h3 tags)
 */
function tagSpot(tag, position, hVal) {
    this.t = tag;
    this.y = position;
    this.h = hVal;
}

tagSpot.prototype.tag = function() {
    return this.t;
}

tagSpot.prototype.position = function() {
    return this.y;
}

tagSpot.prototype.hVal = function() {
    return this.h;
}

/*
 *  Helper function for generate index. Inserts an element into the array just before the specified index.
 *  Updates array.
 *  array must be an array
 *  element must be an html element
 *  index must be a number [0, array.length]
 */
function insertAt(index, array, element) {
    if(index == array.length) {
        array[index] = element;
        console.log("inserted at the end of array");
        return array;
    }
    var arrayCopy = Array.from(array);
    var half1 = arrayCopy.slice(0, index);
    var half2 = arrayCopy.slice(index, array.length - 1);
    console.log("inserted at position " + index + " of array");
    return half1.concat(element, half2);
}

/*
 *  Helper function for generate index. ensures that this next h3 is indented on the index
 */
function indexH3(h3, id) {
    var indexElement = '<li style="margin-left: calc(5% + 50px); margin-top: 0px;"><a href="#' + id + '" class="index_text">' + h3 + '</a></li>';
    return indexElement;
}

/*
 *  Helper function for generate index. ensures that this next h3 is indented on the index
 */
function indexH2(h2, id) {
    var indexElement = '<li style="margin-top: 0px; margin-left: calc(5% + 25px);"><a href="#' + id + '" class="index_text">' + h2 + '</a></li>';
    return indexElement;
}